# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - "**/v*"
      - "**/v*"

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Bazel
        uses: bazel-contrib/setup-bazel@0.8.1
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          disk-cache: ${{ github.workflow }}
          # Share repository cache between workflows.
          repository-cache: true

      - name: Build Release Artifacts
        id: build
        run: |
          FULL_TAG="${{ github.ref_name }}"
          PROJECT_NAME="${FULL_TAG%/*}"
          bazel build //${PROJECT_NAME}:release
          ARTIFACT_PATH=$(bazel cquery --output=files //${PROJECT_NAME}:release)
          echo "::set-output name=artifact_path::${ARTIFACT_PATH}"
          echo "::set-output name=artifact_name::$(basename ${ARTIFACT_PATH})"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ github.event.head_commit.message }}
            New release for ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Build and Upload Release Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PROJECT_NAME=$(echo ${{ github.ref_name }} | cut -d/ -f1)
          bazel build //${PROJECT_NAME}/firmware:release

          echo "Uploading assets..."
          for file in $(bazel cquery --output=files //${PROJECT_NAME}/firmware:release); do
            echo "Uploading $file"
            gh release upload ${{ github.ref_name }} "$file" --clobber
          done
